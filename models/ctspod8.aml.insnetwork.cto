/**
 * POD8 Insurance consortium to solve primarily two problems:
 *   1. Money Laundering and Frauds in New Business and Claims processing
 *   2. Build-up of Unclaimed amount owing to dated customer contact details
 *	 Business case: validate if any similar policy is already rejected by other insurers 
 *   Business case: validate if customer is flagged for any fraud or medical reason
 *   Business case: validate if customer already has any other term policy
 *   Business case: validate if the total SA for other policies is correctly mentioned by customer 
 *   Business case: Trigger an event in case of change of status for Customer, eg. from NONE to PA
 */
namespace ctspod8.aml.insnetwork

asset Policy identified by applicationId {
    o String applicationId
    o String description optional
    o PolType policyType default="TERM"
    o PolStatus policyStatus default="PENDING_VALIDTION"
    o String policyStatusReason optional
    o Double sumAssuredPolicy
    o Double sumAssuredOtherPolicies optional
    --> Customer customer
    o String lastUpdAgentId
}

enum PolStatus {
    o PENDING_VALIDTION
    o VALIDATION_APPROVED
    o VALIDATION_REJECTED
    o REJECTED  // To be changed by Insurance Agent
    o IN_FORCE  // To be changed by Insurance Agent
    o LAPSED
    o MATURED
    o CANCELLED
    // PENDING validation to be added
}

enum PolType {
    o ENDOWMENT
    o MONEYBACK
    o TERM
    o PENSION
}

asset Customer identified by aadhar {
    o String aadhar
    o String firstName
    o String lastName
    o CustFlagCode custFlagCode default="NONE" 
    o String custFlagCodeReason optional // Description of Customer Flag code reason
    o DateTime custFlagCodeChngDt
    o Double sumAssuredTermPolicies optional // Total SA of all Term Policies of this Customer
    o Double sumAssuredOtherPolicies optional // Total SA of all policies except term Policies of this Customer 
    o String lastUpdAgentId
}

enum CustFlagCode {
    o NONE
    o MEDICAL 
    o ML // Money Laundering
    o PA // Politically Active
    o CRIMINAL
}

asset Claim identified by claimId{
    o String claimId
    o ClmStatus clmStatus
    --> Policy policy
}

enum ClmStatus {
    o PENDING
    o REJECTED 
    o APPROVED
}

transaction updateCust { // To change Customer flag code based on life events
    --> Customer cust
    o CustFlagCode newflagCode 
    o String newflagCodeReason // Description of Medical or Fraud reason
}

event CustStatusChngEvent {
    --> Customer cust
    o String oldVal // old value for customer flag code
    o String newVal // new value for customer flag code 
}

transaction validateCust {
    --> Customer customer
}

transaction updatePolicy {
    --> Policy policyAppl
}

transaction validatePolicy { // validating policy
    --> Policy policyAppl
    o PolStatus newapplicationStatus
    o String newapplicationStatusReason
}
